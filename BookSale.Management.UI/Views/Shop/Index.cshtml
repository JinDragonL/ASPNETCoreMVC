
@using BookSale.Management.Application.DTOs.Book;
@model BookForSiteDto

<div class="container mt-3">
    <div class="row">
        <div class="col-2">
            <ol class="list-group list-group-numbered">
                <li class="list-group-item d-flex justify-content-between align-items-start">
                    <div class="ms-2 me-auto">
                        <div class="fw-bold"><a href="/shop?g=0">All</a></div>
                    </div>
                </li>
                 @{
                    var genres = ViewBag.Genres as IEnumerable<BookSale.Management.Application.DTOs.Genre.GenreSiteDto>;

                    foreach (var genre in genres)
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-start">
                            <div class="ms-2 me-auto">
                                <div class="fw-bold"><a href="/shop?g=@genre.Id">@genre.Name</a></div>
                            </div>
                            <span class="badge bg-primary rounded-pill">@genre.TotalBooks</span>
                        </li>
                    }
                }
            </ol>
        </div>
        <div class="col-10">
            <div class="row" id="content-book">
                @{
                    var pagination = Model;

                    if (pagination.Books.Count() > 0)
                    {
                        foreach (var book in pagination.Books)
                        {
                            <partial name="_ProductItems.cshtml" model="book" />
                        }
                    }
                    else
                    {
                        <p>No data to display</p>
                    }
                }
            </div>
            <div class="row mt-3">
                <input type="hidden" value="@ViewBag.CurrentGenre" id="current-genre" />
                <input type="hidden" value="@ViewBag.CurrentPageIndex" id="current-page-index" />
                <div class="col-md-6 offset-md-3 text-center">
                    <small id="txt-pagination">@Model.CurrentRecord items of @Model.TotalRecord</small>
                    <div class="progress" role="progressbar" aria-label="Example 1px high" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" style="height: 1px">
                        <div id="progressbar" class="progress-bar" style="width: @(Model.ProgressingValue)%"></div>
                    </div>

                    @{
                        bool isDisabled = Model.IsDisable;

                        if(isDisabled)
                        {
                            <button type="button" class="btn btn-info btn-sm mt-2" disabled id="btn-load-more">Load More</button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-info btn-sm mt-2" id="btn-load-more">Load More</button>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/components/shop.js"></script>
}
